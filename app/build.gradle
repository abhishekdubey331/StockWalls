plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "org.jlleitschuh.gradle.ktlint" version "11.4.0"
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.unsplash.stockwalls"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        def propFile = rootProject.file("./local.properties")
        def properties = new Properties()
        if (propFile.exists()) {
            properties.load(new FileInputStream(propFile))
        }
        def accessKey = properties['ACCESS_KEY'] ?: "\"default_key\""

        release {
            buildConfigField("String", "ACCESS_KEY", accessKey)
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField("String", "ACCESS_KEY", accessKey)
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    ktlint {
        android = true
        outputToConsole = true
        ignoreFailures = false
        disabledRules = ["no-wildcard-imports"]
        reporters {
            reporter "plain"
            reporter "checkstyle"
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    android {
        buildFeatures {
            viewBinding = true
            compose true
            buildConfig = true
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.6"
    }

    namespace 'com.unsplash.stockwalls'
}

dependencies {
    def splashScreenVersion = "1.0.1"
    def composeBom = platform('androidx.compose:compose-bom:2024.09.02')
    implementation composeBom
    androidTestImplementation composeBom

    // Compose
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.foundation:foundation'
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'

    implementation 'androidx.activity:activity-compose:1.9.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.8.6'

    implementation "androidx.core:core-splashscreen:$splashScreenVersion"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0"

    // ViewModel Delegate
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'com.google.android.material:material:1.9.0'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Coil
    implementation "io.coil-kt:coil:2.6.0"
    implementation "io.coil-kt:coil-compose:2.6.0"
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"

    // Paging 3
    implementation "androidx.paging:paging-runtime-ktx:3.3.2"
    implementation "androidx.paging:paging-compose:3.3.2"

    /***
     *  ************  Testing Libraries Below **************/
    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito_core_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android_version"

    // Okhttp Mock Server
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    // Truth
    testImplementation "com.google.truth:truth:$truth_version"

    // Coroutines Testing
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_testing_version"

    // Junit
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
}
